{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nexport function useCardRatio(initialParams) {\n  _s();\n\n  const [aspectRatio, setAspectRatio] = useState(initialParams);\n  const calculateRatio = useCallback((height, width) => {\n    if (height && width) {\n      const isLandscape = height <= width;\n      const ratio = isLandscape ? width / height : height / width;\n      setAspectRatio(ratio);\n    }\n  }, []);\n  return [aspectRatio, calculateRatio];\n}\n\n_s(useCardRatio, \"qkoSUAoCuOtYyY2qIhDHwu6zASA=\");\n\nexport function useOffsets(vWidth, vHeight, cWidth, cHeight) {\n  _s2();\n\n  const [offsets, setOffsets] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (vWidth && vHeight && cWidth && cHeight) {\n      const x = vWidth > cWidth ? Math.round((vWidth - cWidth) / 2) : 0;\n      const y = vHeight > cHeight ? Math.round((vHeight - cHeight) / 2) : 0;\n      setOffsets({\n        x,\n        y\n      });\n    }\n  }, [vWidth, vHeight, cWidth, cHeight]);\n  return offsets;\n}\n\n_s2(useOffsets, \"LPQfqEkzIC6BsSbfIk7jZN1WR3U=\");\n\nexport function useUserMedia(requestedMedia) {\n  _s3();\n\n  const [mediaStream, setMediaStream] = useState(null);\n  useEffect(() => {\n    async function enableVideoStream() {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(requestedMedia);\n        setMediaStream(stream);\n      } catch (err) {\n        alert(\"Please provide camera permission to take picture\");\n      }\n    }\n\n    if (!mediaStream) {\n      enableVideoStream();\n    } else {\n      return function cleanup() {\n        mediaStream.getTracks().forEach(track => {\n          track.stop();\n        });\n      };\n    }\n  }, [mediaStream, requestedMedia]);\n  return mediaStream;\n}\n\n_s3(useUserMedia, \"oKgeb410CvQ1KtUfT16n/lY1/DA=\");","map":{"version":3,"sources":["/Users/kamleshnehra/Desktop/zolve/src/utils/index.js"],"names":["useState","useEffect","useCallback","useCardRatio","initialParams","aspectRatio","setAspectRatio","calculateRatio","height","width","isLandscape","ratio","useOffsets","vWidth","vHeight","cWidth","cHeight","offsets","setOffsets","x","y","Math","round","useUserMedia","requestedMedia","mediaStream","setMediaStream","enableVideoStream","stream","navigator","mediaDevices","getUserMedia","err","alert","cleanup","getTracks","forEach","track","stop"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AAEA,OAAO,SAASC,YAAT,CAAsBC,aAAtB,EAAqC;AAAA;;AAC1C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAACI,aAAD,CAA9C;AAEA,QAAMG,cAAc,GAAGL,WAAW,CAAC,CAACM,MAAD,EAASC,KAAT,KAAmB;AACpD,QAAID,MAAM,IAAIC,KAAd,EAAqB;AACnB,YAAMC,WAAW,GAAGF,MAAM,IAAIC,KAA9B;AACA,YAAME,KAAK,GAAGD,WAAW,GAAGD,KAAK,GAAGD,MAAX,GAAoBA,MAAM,GAAGC,KAAtD;AAEAH,MAAAA,cAAc,CAACK,KAAD,CAAd;AACD;AACF,GAPiC,EAO/B,EAP+B,CAAlC;AASA,SAAO,CAACN,WAAD,EAAcE,cAAd,CAAP;AACD;;GAbeJ,Y;;AAehB,OAAO,SAASS,UAAT,CAAoBC,MAApB,EAA4BC,OAA5B,EAAqCC,MAArC,EAA6CC,OAA7C,EAAsD;AAAA;;AAC3D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC;AAAEmB,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAD,CAAtC;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,MAAM,IAAIC,OAAV,IAAqBC,MAArB,IAA+BC,OAAnC,EAA4C;AAC1C,YAAMG,CAAC,GAAGN,MAAM,GAAGE,MAAT,GAAkBM,IAAI,CAACC,KAAL,CAAW,CAACT,MAAM,GAAGE,MAAV,IAAoB,CAA/B,CAAlB,GAAsD,CAAhE;AACA,YAAMK,CAAC,GAAGN,OAAO,GAAGE,OAAV,GAAoBK,IAAI,CAACC,KAAL,CAAW,CAACR,OAAO,GAAGE,OAAX,IAAsB,CAAjC,CAApB,GAA0D,CAApE;AAEAE,MAAAA,UAAU,CAAC;AAAEC,QAAAA,CAAF;AAAKC,QAAAA;AAAL,OAAD,CAAV;AACD;AACF,GAPQ,EAON,CAACP,MAAD,EAASC,OAAT,EAAkBC,MAAlB,EAA0BC,OAA1B,CAPM,CAAT;AASA,SAAOC,OAAP;AACD;;IAbeL,U;;AAgBhB,OAAO,SAASW,YAAT,CAAsBC,cAAtB,EAAsC;AAAA;;AAC3C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,CAAC,IAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe0B,iBAAf,GAAmC;AACjC,UAAI;AACF,cAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CACnBP,cADmB,CAArB;AAGAE,QAAAA,cAAc,CAACE,MAAD,CAAd;AACD,OALD,CAKE,OAAOI,GAAP,EAAY;AACZC,QAAAA,KAAK,CAAC,kDAAD,CAAL;AACD;AACF;;AAED,QAAI,CAACR,WAAL,EAAkB;AAChBE,MAAAA,iBAAiB;AAClB,KAFD,MAEO;AACL,aAAO,SAASO,OAAT,GAAmB;AACxBT,QAAAA,WAAW,CAACU,SAAZ,GAAwBC,OAAxB,CAAgCC,KAAK,IAAI;AACvCA,UAAAA,KAAK,CAACC,IAAN;AACD,SAFD;AAGD,OAJD;AAKD;AACF,GArBQ,EAqBN,CAACb,WAAD,EAAcD,cAAd,CArBM,CAAT;AAuBA,SAAOC,WAAP;AACD;;IA3BeF,Y","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\nexport function useCardRatio(initialParams) {\n  const [aspectRatio, setAspectRatio] = useState(initialParams);\n\n  const calculateRatio = useCallback((height, width) => {\n    if (height && width) {\n      const isLandscape = height <= width;\n      const ratio = isLandscape ? width / height : height / width;\n\n      setAspectRatio(ratio);\n    }\n  }, []);\n\n  return [aspectRatio, calculateRatio];\n}\n\nexport function useOffsets(vWidth, vHeight, cWidth, cHeight) {\n  const [offsets, setOffsets] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (vWidth && vHeight && cWidth && cHeight) {\n      const x = vWidth > cWidth ? Math.round((vWidth - cWidth) / 2) : 0;\n      const y = vHeight > cHeight ? Math.round((vHeight - cHeight) / 2) : 0;\n\n      setOffsets({ x, y });\n    }\n  }, [vWidth, vHeight, cWidth, cHeight]);\n\n  return offsets;\n}\n\n\nexport function useUserMedia(requestedMedia) {\n  const [mediaStream, setMediaStream] = useState(null);\n\n  useEffect(() => {\n    async function enableVideoStream() {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(\n          requestedMedia\n        );\n        setMediaStream(stream);\n      } catch (err) {\n        alert(\"Please provide camera permission to take picture\")\n      }\n    }\n\n    if (!mediaStream) {\n      enableVideoStream();\n    } else {\n      return function cleanup() {\n        mediaStream.getTracks().forEach(track => {\n          track.stop();\n        });\n      };\n    }\n  }, [mediaStream, requestedMedia]);\n\n  return mediaStream;\n}\n"]},"metadata":{},"sourceType":"module"}