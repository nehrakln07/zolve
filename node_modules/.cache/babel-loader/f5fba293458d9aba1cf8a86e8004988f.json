{"ast":null,"code":"var _jsxFileName = \"/Users/kamleshnehra/Desktop/zolve/src/components/chart.js\";\nimport React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  const {\n    data\n  } = props;\n  console.log(data, \"data\");\n  const chartData = {\n    chart: {\n      type: 'column'\n    },\n    title: {\n      text: 'Bar Chart'\n    },\n    subtitle: {\n      text: ''\n    },\n    xAxis: {\n      type: 'category',\n      title: {\n        text: 'Languages '\n      },\n      labels: {\n        style: {\n          fontSize: '13px',\n          fontFamily: 'Verdana, sans-serif'\n        }\n      }\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Count '\n      }\n    },\n    legend: {\n      enabled: false\n    },\n    tooltip: {\n      pointFormat: 'Count: <b>{point.y:.1f}</b>'\n    },\n    series: [{\n      name: 'language',\n      data: [...data],\n      dataLabels: {\n        enabled: true,\n        color: '#FFFFFF',\n        format: '{point.y:.1f}',\n        y: 10,\n        style: {\n          fontSize: '13px',\n          fontFamily: 'Verdana, sans-serif'\n        }\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/kamleshnehra/Desktop/zolve/src/components/chart.js"],"names":["React","Component","Highcharts","HighchartsReact","Chart","props","data","console","log","chartData","chart","type","title","text","subtitle","xAxis","labels","style","fontSize","fontFamily","yAxis","min","legend","enabled","tooltip","pointFormat","series","name","dataLabels","color","format","y"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,MAAlB;AACA,QAAMG,SAAS,GAAG;AAChBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KADS;AAIhBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KAJS;AAOhBC,IAAAA,QAAQ,EAAE;AACRD,MAAAA,IAAI,EAAE;AADE,KAPM;AAUhBE,IAAAA,KAAK,EAAE;AACLJ,MAAAA,IAAI,EAAE,UADD;AAELC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OAFF;AAKLG,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,MADL;AAELC,UAAAA,UAAU,EAAE;AAFP;AADD;AALH,KAVS;AAsBhBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,GAAG,EAAE,CADA;AAELT,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD;AAFF,KAtBS;AA4BhBS,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH,KA5BQ;AA+BhBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE;AADN,KA/BO;AAkChBC,IAAAA,MAAM,EAAE,CAAC;AACPC,MAAAA,IAAI,EAAE,UADC;AAEPrB,MAAAA,IAAI,EAAE,CAAC,GAAGA,IAAJ,CAFC;AAGPsB,MAAAA,UAAU,EAAE;AACVL,QAAAA,OAAO,EAAE,IADC;AAEVM,QAAAA,KAAK,EAAE,SAFG;AAGVC,QAAAA,MAAM,EAAE,eAHE;AAIVC,QAAAA,CAAC,EAAE,EAJO;AAKVd,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,MADL;AAELC,UAAAA,UAAU,EAAE;AAFP;AALG;AAHL,KAAD;AAlCQ,GAAlB;AAkDA,sBACE;AAAA,2BACE,QAAC,eAAD;AACE,MAAA,UAAU,EAAEjB,UADd;AAEE,MAAA,OAAO,EAAEO;AAFX;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAQD,CA7DD;;KAAML,K;AA+DN,eAAeA,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst Chart = props => {\n  const { data } = props;\n  console.log(data, \"data\");\n  const chartData = {\n    chart: {\n      type: 'column'\n    },\n    title: {\n      text: 'Bar Chart'\n    },\n    subtitle: {\n      text: ''\n    },\n    xAxis: {\n      type: 'category',\n      title: {\n        text: 'Languages '\n      },\n      labels: {\n        style: {\n          fontSize: '13px',\n          fontFamily: 'Verdana, sans-serif'\n        }\n      }\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Count '\n      }\n    },\n    legend: {\n      enabled: false\n    },\n    tooltip: {\n      pointFormat: 'Count: <b>{point.y:.1f}</b>'\n    },\n    series: [{\n      name: 'language',\n      data: [...data],\n      dataLabels: {\n        enabled: true,\n        color: '#FFFFFF',\n        format: '{point.y:.1f}',\n        y: 10,\n        style: {\n          fontSize: '13px',\n          fontFamily: 'Verdana, sans-serif'\n        }\n      }\n    }]\n  }\n\n  return (\n    <>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={chartData}\n      />\n    </>\n  );\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}